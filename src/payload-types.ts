/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    pages: Page;
    categories: Category;
    products: Product;
    posts: Post;
    media: Media;
    orders: Order;
    subscribers: Subscriber;
    users: User;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission;
    search: Search;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    orders: OrdersSelect<false> | OrdersSelect<true>;
    subscribers: SubscribersSelect<false> | SubscribersSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    contactInfo: ContactInfo;
    productPageSettings: ProductPageSetting;
    postPageSettings: PostPageSetting;
    header: Header;
    footer: Footer;
  };
  globalsSelect: {
    contactInfo: ContactInfoSelect<false> | ContactInfoSelect<true>;
    productPageSettings: ProductPageSettingsSelect<false> | ProductPageSettingsSelect<true>;
    postPageSettings: PostPageSettingsSelect<false> | PostPageSettingsSelect<true>;
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
  };
  locale: 'en' | 'uk';
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  hero?:
    | {
        layout: 'hero1' | 'hero2';
        imageSide?: ('left' | 'right') | null;
        title?: {
          variant?: ('colorAccent' | 'weightAccent') | null;
          alignment?: ('left' | 'center' | 'right') | null;
          subtitle?: string | null;
          /**
           * To accent a word or phrase, wrap it in double curly braces {{ }}. For example: This is {{accented}} text.
           */
          title?: string | null;
          description?: string | null;
        };
        backgroundImage: number | Media;
        sideImage?: (number | null) | Media;
        links?:
          | {
              link: {
                type?: ('reference' | 'custom') | null;
                newTab?: boolean | null;
                reference?:
                  | ({
                      relationTo: 'pages';
                      value: number | Page;
                    } | null)
                  | ({
                      relationTo: 'posts';
                      value: number | Post;
                    } | null)
                  | ({
                      relationTo: 'products';
                      value: number | Product;
                    } | null);
                url?: string | null;
                label: string;
                /**
                 * Choose how the link should be rendered.
                 */
                appearance?: ('default' | 'outline') | null;
              };
              id?: string | null;
            }[]
          | null;
        /**
         * Best with 3, 4 items
         */
        stats?:
          | {
              number: string;
              label: string;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  layout: (
    | CallToActionBlock
    | ContentBlock
    | MediaBlock
    | ArchiveBlock
    | FormBlock
    | AboutBlock
    | AboutFeaturesBlock
    | FeatureCardsBlock
    | FeatureTabsBlock
    | FeatureGridBlock
    | FeatureGalleryBlock
    | TestimonialBlock
    | FAQBlock
    | ContactUsBlock
  )[];
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Cloudinary metadata
   */
  cloudinary?: {
    assetId?: string | null;
    publicId?: string | null;
    version?: number | null;
    signature?: string | null;
    width?: number | null;
    height?: number | null;
    format?: string | null;
    resourceType?: string | null;
    createdAt?: string | null;
    bytes?: number | null;
    type?: string | null;
    url?: string | null;
    secureUrl?: string | null;
    folder?: string | null;
    displayName?: string | null;
    duration?: number | null;
    eager?: string | null;
  };
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: number;
  title: string;
  /**
   * Short summary of the post, used in listings and previews
   */
  excerpt?: string | null;
  /**
   * Main image for the post
   */
  heroImage?: (number | null) | Media;
  /**
   * Gallery of images for the post at the bottom
   */
  gallery?:
    | {
        image: number | Media;
        caption?: string | null;
        id?: string | null;
      }[]
    | null;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  categories?: (number | Category)[] | null;
  relatedPosts?: (number | Post)[] | null;
  /**
   * Tags for the post, used for filtering and searching
   */
  tags?:
    | {
        tag: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Reading time estimate (e.g., "5 min read")
   */
  readTime?: string | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (number | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
        role?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  title: string;
  slug?: string | null;
  slugLock?: boolean | null;
  parent?: (number | null) | Category;
  breadcrumbs?:
    | {
        doc?: (number | null) | Category;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: number;
  title: string;
  /**
   * Short description displayed on the product page and in the product list.
   */
  shortDescription: string;
  /**
   * Item code or SKU of the product.
   */
  itemCode?: string | null;
  /**
   * Price of the product. Can be a string for custom pricing. Defaults to "Price on request".
   */
  price?: string | null;
  availability: 'in_stock' | 'out_of_stock' | 'pre_order';
  isRatingEnabled?: boolean | null;
  rating?: number | null;
  reviewsCount?: number | null;
  /**
   * Features list displayed in the main product information.
   */
  features?:
    | {
        feature: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Product images displayed in the image slider. The first image is the main one.
   */
  images?:
    | {
        image: number | Media;
        id?: string | null;
      }[]
    | null;
  /**
   * Benefits displayed below the main product information and tabs. Best with 3 or 6 items. Can override benefits from the global "Product Page Settings".
   */
  benefits?:
    | {
        icon?: string | null;
        title: string;
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Content displayed below the main product information, tabs, and benefits. This can be extended with content from the global "Product Page Settings".
   */
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Full product description displayed in the "Description" tab. Leave empty to hide the tab.
   */
  fullDescription?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Technical specifications displayed in the "Specifications" tab.
   */
  specifications?:
    | {
        name: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Additional info displayed in the "Specifications" tab. Can be extended with global settings.
   */
  additionalSpecifications?:
    | {
        icon?: string | null;
        name: string;
        description: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Documents displayed in the "Documents" tab. Can be extended with documents in global "Product Page Settings".
   */
  documents?:
    | {
        name: string;
        file?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  relatedProducts?: (number | Product)[] | null;
  categories?: (number | Category)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (number | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock".
 */
export interface CallToActionBlock {
  theme?: ('light' | 'dark') | null;
  sbg?: {
    variant?: ('none' | 'gradient' | 'image' | 'gradient and image') | null;
    gradientType?: ('top' | 'bottom' | 'top and bottom') | null;
    img?: (number | null) | Media;
  };
  layoutStyle: 'none' | 'sm' | 'lg';
  imageSide?: ('left' | 'right') | null;
  image?: (number | null) | Media;
  marginTop: 'none' | 'sm' | 'md' | 'lg' | 'xl';
  marginBottom: 'none' | 'sm' | 'md' | 'lg' | 'xl';
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  links?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null)
            | ({
                relationTo: 'products';
                value: number | Product;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  columns?:
    | {
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        richText?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null)
            | ({
                relationTo: 'products';
                value: number | Product;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: number | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock".
 */
export interface ArchiveBlock {
  theme?: ('light' | 'dark') | null;
  title?: {
    variant?: ('colorAccent' | 'weightAccent') | null;
    alignment?: ('left' | 'center' | 'right') | null;
    subtitle?: string | null;
    /**
     * To accent a word or phrase, wrap it in double curly braces {{ }}. For example: This is {{accented}} text.
     */
    title?: string | null;
    description?: string | null;
  };
  sbg?: {
    variant?: ('none' | 'gradient' | 'image' | 'gradient and image') | null;
    gradientType?: ('top' | 'bottom' | 'top and bottom') | null;
    img?: (number | null) | Media;
  };
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  populateBy?: ('collection' | 'selection') | null;
  relationTo?: ('posts' | 'products') | null;
  categories?: (number | Category)[] | null;
  limit?: number | null;
  selectedDocs?:
    | (
        | {
            relationTo: 'posts';
            value: number | Post;
          }
        | {
            relationTo: 'products';
            value: number | Product;
          }
      )[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'archive';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock".
 */
export interface FormBlock {
  form: number | Form;
  enableIntro?: boolean | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'formBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: number;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            placeholder?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            placeholder?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            placeholder?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            placeholder?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "AboutBlock".
 */
export interface AboutBlock {
  theme?: ('light' | 'dark') | null;
  title?: {
    variant?: ('colorAccent' | 'weightAccent') | null;
    alignment?: ('left' | 'center' | 'right') | null;
    subtitle?: string | null;
    /**
     * To accent a word or phrase, wrap it in double curly braces {{ }}. For example: This is {{accented}} text.
     */
    title?: string | null;
    description?: string | null;
  };
  sbg?: {
    variant?: ('none' | 'gradient' | 'image' | 'gradient and image') | null;
    gradientType?: ('top' | 'bottom' | 'top and bottom') | null;
    img?: (number | null) | Media;
  };
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  mainImage: number | Media;
  secondaryImage: number | Media;
  cta?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null)
            | ({
                relationTo: 'products';
                value: number | Product;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'about';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "AboutFeaturesBlock".
 */
export interface AboutFeaturesBlock {
  theme?: ('light' | 'dark') | null;
  title?: {
    variant?: ('colorAccent' | 'weightAccent') | null;
    alignment?: ('left' | 'center' | 'right') | null;
    subtitle?: string | null;
    /**
     * To accent a word or phrase, wrap it in double curly braces {{ }}. For example: This is {{accented}} text.
     */
    title?: string | null;
    description?: string | null;
  };
  sbg?: {
    variant?: ('none' | 'gradient' | 'image' | 'gradient and image') | null;
    gradientType?: ('top' | 'bottom' | 'top and bottom') | null;
    img?: (number | null) | Media;
  };
  mainImage?: (number | null) | Media;
  secondaryImage?: (number | null) | Media;
  /**
   * Best used with 2, 4 or 6 items.
   */
  features?:
    | {
        icon?: string | null;
        title: string;
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  cta?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null)
            | ({
                relationTo: 'products';
                value: number | Product;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  /**
   * Best used with 2, 3 or 4 items.
   */
  stats?:
    | {
        number: string;
        label: string;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'aboutFeatures';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeatureCardsBlock".
 */
export interface FeatureCardsBlock {
  theme?: ('light' | 'dark') | null;
  title?: {
    variant?: ('colorAccent' | 'weightAccent') | null;
    alignment?: ('left' | 'center' | 'right') | null;
    subtitle?: string | null;
    /**
     * To accent a word or phrase, wrap it in double curly braces {{ }}. For example: This is {{accented}} text.
     */
    title?: string | null;
    description?: string | null;
  };
  sbg?: {
    variant?: ('none' | 'gradient' | 'image' | 'gradient and image') | null;
    gradientType?: ('top' | 'bottom' | 'top and bottom') | null;
    img?: (number | null) | Media;
  };
  /**
   * Best used with 4 or 8 items.
   */
  features?:
    | {
        icon?: string | null;
        title: string;
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'featureCards';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeatureTabsBlock".
 */
export interface FeatureTabsBlock {
  theme?: ('light' | 'dark') | null;
  title?: {
    variant?: ('colorAccent' | 'weightAccent') | null;
    alignment?: ('left' | 'center' | 'right') | null;
    subtitle?: string | null;
    /**
     * To accent a word or phrase, wrap it in double curly braces {{ }}. For example: This is {{accented}} text.
     */
    title?: string | null;
    description?: string | null;
  };
  sbg?: {
    variant?: ('none' | 'gradient' | 'image' | 'gradient and image') | null;
    gradientType?: ('top' | 'bottom' | 'top and bottom') | null;
    img?: (number | null) | Media;
  };
  /**
   * Best for 3 - 10 features
   */
  features?:
    | {
        icon?: string | null;
        title: string;
        description?: string | null;
        content?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  cta?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null)
            | ({
                relationTo: 'products';
                value: number | Product;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'featureTabs';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeatureGridBlock".
 */
export interface FeatureGridBlock {
  theme?: ('light' | 'dark') | null;
  title?: {
    variant?: ('colorAccent' | 'weightAccent') | null;
    alignment?: ('left' | 'center' | 'right') | null;
    subtitle?: string | null;
    /**
     * To accent a word or phrase, wrap it in double curly braces {{ }}. For example: This is {{accented}} text.
     */
    title?: string | null;
    description?: string | null;
  };
  sbg?: {
    variant?: ('none' | 'gradient' | 'image' | 'gradient and image') | null;
    gradientType?: ('top' | 'bottom' | 'top and bottom') | null;
    img?: (number | null) | Media;
  };
  /**
   * Best used with 3 or 6 items.
   */
  advantages: {
    icon?: string | null;
    title: string;
    description?: string | null;
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'featureGrid';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeatureGalleryBlock".
 */
export interface FeatureGalleryBlock {
  theme?: ('light' | 'dark') | null;
  title?: {
    variant?: ('colorAccent' | 'weightAccent') | null;
    alignment?: ('left' | 'center' | 'right') | null;
    subtitle?: string | null;
    /**
     * To accent a word or phrase, wrap it in double curly braces {{ }}. For example: This is {{accented}} text.
     */
    title?: string | null;
    description?: string | null;
  };
  sbg?: {
    variant?: ('none' | 'gradient' | 'image' | 'gradient and image') | null;
    gradientType?: ('top' | 'bottom' | 'top and bottom') | null;
    img?: (number | null) | Media;
  };
  /**
   * Best used with 2, 4, or 6 items.
   */
  features: {
    title: string;
    description: string;
    image: number | Media;
    icon?: string | null;
    link: {
      type?: ('reference' | 'custom') | null;
      newTab?: boolean | null;
      reference?:
        | ({
            relationTo: 'pages';
            value: number | Page;
          } | null)
        | ({
            relationTo: 'posts';
            value: number | Post;
          } | null)
        | ({
            relationTo: 'products';
            value: number | Product;
          } | null);
      url?: string | null;
      label: string;
    };
    id?: string | null;
  }[];
  /**
   * Best used with 3 or 4 items.
   */
  stats?:
    | {
        number: string;
        label: string;
        description: string;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'featureGallery';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TestimonialBlock".
 */
export interface TestimonialBlock {
  theme?: ('light' | 'dark') | null;
  sbg?: {
    variant?: ('none' | 'gradient' | 'image' | 'gradient and image') | null;
    gradientType?: ('top' | 'bottom' | 'top and bottom') | null;
    img?: (number | null) | Media;
  };
  title?: {
    variant?: ('colorAccent' | 'weightAccent') | null;
    alignment?: ('left' | 'center' | 'right') | null;
    subtitle?: string | null;
    /**
     * To accent a word or phrase, wrap it in double curly braces {{ }}. For example: This is {{accented}} text.
     */
    title?: string | null;
    description?: string | null;
  };
  /**
   * Best for 3-10 testimonials
   */
  testimonials?:
    | {
        name: string;
        role?: string | null;
        rating?: number | null;
        image?: (number | null) | Media;
        avatar?: (number | null) | Media;
        content: string;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'testimonial';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FAQBlock".
 */
export interface FAQBlock {
  theme?: ('light' | 'dark') | null;
  sbg?: {
    variant?: ('none' | 'gradient' | 'image' | 'gradient and image') | null;
    gradientType?: ('top' | 'bottom' | 'top and bottom') | null;
    img?: (number | null) | Media;
  };
  title?: {
    variant?: ('colorAccent' | 'weightAccent') | null;
    alignment?: ('left' | 'center' | 'right') | null;
    subtitle?: string | null;
    /**
     * To accent a word or phrase, wrap it in double curly braces {{ }}. For example: This is {{accented}} text.
     */
    title?: string | null;
    description?: string | null;
  };
  image: number | Media;
  /**
   * Add up to 2 statistics to display next to the FAQ section.
   */
  statistics?:
    | {
        title: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  additionalInfoTitle: string;
  additionalInfo: string;
  /**
   * Best used with 5 - 10 items.
   */
  faqs?:
    | {
        question: string;
        answer?: string | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'faq';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContactUsBlock".
 */
export interface ContactUsBlock {
  theme?: ('light' | 'dark') | null;
  sbg?: {
    variant?: ('none' | 'gradient' | 'image' | 'gradient and image') | null;
    gradientType?: ('top' | 'bottom' | 'top and bottom') | null;
    img?: (number | null) | Media;
  };
  title?: {
    variant?: ('colorAccent' | 'weightAccent') | null;
    alignment?: ('left' | 'center' | 'right') | null;
    subtitle?: string | null;
    /**
     * To accent a word or phrase, wrap it in double curly braces {{ }}. For example: This is {{accented}} text.
     */
    title?: string | null;
    description?: string | null;
  };
  blocks?: FormBlock[] | null;
  contactDisplay?: {
    showPhones?: boolean | null;
    showEmails?: boolean | null;
    showAddresses?: boolean | null;
    showWorkingHours?: boolean | null;
    showMap?: boolean | null;
  };
  corporate?: {
    title?: string | null;
    description?: string | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'contactUs';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
  id: number;
  /**
   * Title of the related product
   */
  productTitle?: string | null;
  /**
   * Product item code from the form
   */
  itemCode?: string | null;
  /**
   * ID of the related product
   */
  productId?: string | null;
  submittedAt: string;
  status?: ('new' | 'in_progress' | 'resolved' | 'closed') | null;
  /**
   * Internal notes for handling this submission
   */
  notes?: string | null;
  name: string;
  phone?: string | null;
  email: string;
  message?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "subscribers".
 */
export interface Subscriber {
  id: number;
  email: string;
  status?: ('active' | 'unsubscribed' | 'pending') | null;
  subscribedAt?: string | null;
  source?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: number;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: number;
  form: number | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: number;
  title?: string | null;
  priority?: number | null;
  doc:
    | {
        relationTo: 'posts';
        value: number | Post;
      }
    | {
        relationTo: 'products';
        value: number | Product;
      };
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (number | null) | Media;
  };
  categories?:
    | {
        relationTo?: string | null;
        id?: string | null;
        title?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: number;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'products';
        value: number | Product;
      } | null)
    | ({
        relationTo: 'posts';
        value: number | Post;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'orders';
        value: number | Order;
      } | null)
    | ({
        relationTo: 'subscribers';
        value: number | Subscriber;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'redirects';
        value: number | Redirect;
      } | null)
    | ({
        relationTo: 'forms';
        value: number | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: number | FormSubmission;
      } | null)
    | ({
        relationTo: 'search';
        value: number | Search;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: number | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  hero?:
    | T
    | {
        layout?: T;
        imageSide?: T;
        title?:
          | T
          | {
              variant?: T;
              alignment?: T;
              subtitle?: T;
              title?: T;
              description?: T;
            };
        backgroundImage?: T;
        sideImage?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        stats?:
          | T
          | {
              number?: T;
              label?: T;
              id?: T;
            };
        id?: T;
      };
  layout?:
    | T
    | {
        cta?: T | CallToActionBlockSelect<T>;
        content?: T | ContentBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
        archive?: T | ArchiveBlockSelect<T>;
        formBlock?: T | FormBlockSelect<T>;
        about?: T | AboutBlockSelect<T>;
        aboutFeatures?: T | AboutFeaturesBlockSelect<T>;
        featureCards?: T | FeatureCardsBlockSelect<T>;
        featureTabs?: T | FeatureTabsBlockSelect<T>;
        featureGrid?: T | FeatureGridBlockSelect<T>;
        featureGallery?: T | FeatureGalleryBlockSelect<T>;
        testimonial?: T | TestimonialBlockSelect<T>;
        faq?: T | FAQBlockSelect<T>;
        contactUs?: T | ContactUsBlockSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock_select".
 */
export interface CallToActionBlockSelect<T extends boolean = true> {
  theme?: T;
  sbg?:
    | T
    | {
        variant?: T;
        gradientType?: T;
        img?: T;
      };
  layoutStyle?: T;
  imageSide?: T;
  image?: T;
  marginTop?: T;
  marginBottom?: T;
  richText?: T;
  links?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock_select".
 */
export interface ContentBlockSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        size?: T;
        richText?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock_select".
 */
export interface MediaBlockSelect<T extends boolean = true> {
  media?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock_select".
 */
export interface ArchiveBlockSelect<T extends boolean = true> {
  theme?: T;
  title?:
    | T
    | {
        variant?: T;
        alignment?: T;
        subtitle?: T;
        title?: T;
        description?: T;
      };
  sbg?:
    | T
    | {
        variant?: T;
        gradientType?: T;
        img?: T;
      };
  introContent?: T;
  populateBy?: T;
  relationTo?: T;
  categories?: T;
  limit?: T;
  selectedDocs?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock_select".
 */
export interface FormBlockSelect<T extends boolean = true> {
  form?: T;
  enableIntro?: T;
  introContent?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "AboutBlock_select".
 */
export interface AboutBlockSelect<T extends boolean = true> {
  theme?: T;
  title?:
    | T
    | {
        variant?: T;
        alignment?: T;
        subtitle?: T;
        title?: T;
        description?: T;
      };
  sbg?:
    | T
    | {
        variant?: T;
        gradientType?: T;
        img?: T;
      };
  richText?: T;
  mainImage?: T;
  secondaryImage?: T;
  cta?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "AboutFeaturesBlock_select".
 */
export interface AboutFeaturesBlockSelect<T extends boolean = true> {
  theme?: T;
  title?:
    | T
    | {
        variant?: T;
        alignment?: T;
        subtitle?: T;
        title?: T;
        description?: T;
      };
  sbg?:
    | T
    | {
        variant?: T;
        gradientType?: T;
        img?: T;
      };
  mainImage?: T;
  secondaryImage?: T;
  features?:
    | T
    | {
        icon?: T;
        title?: T;
        description?: T;
        id?: T;
      };
  cta?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  stats?:
    | T
    | {
        number?: T;
        label?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeatureCardsBlock_select".
 */
export interface FeatureCardsBlockSelect<T extends boolean = true> {
  theme?: T;
  title?:
    | T
    | {
        variant?: T;
        alignment?: T;
        subtitle?: T;
        title?: T;
        description?: T;
      };
  sbg?:
    | T
    | {
        variant?: T;
        gradientType?: T;
        img?: T;
      };
  features?:
    | T
    | {
        icon?: T;
        title?: T;
        description?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeatureTabsBlock_select".
 */
export interface FeatureTabsBlockSelect<T extends boolean = true> {
  theme?: T;
  title?:
    | T
    | {
        variant?: T;
        alignment?: T;
        subtitle?: T;
        title?: T;
        description?: T;
      };
  sbg?:
    | T
    | {
        variant?: T;
        gradientType?: T;
        img?: T;
      };
  features?:
    | T
    | {
        icon?: T;
        title?: T;
        description?: T;
        content?: T;
        id?: T;
      };
  cta?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeatureGridBlock_select".
 */
export interface FeatureGridBlockSelect<T extends boolean = true> {
  theme?: T;
  title?:
    | T
    | {
        variant?: T;
        alignment?: T;
        subtitle?: T;
        title?: T;
        description?: T;
      };
  sbg?:
    | T
    | {
        variant?: T;
        gradientType?: T;
        img?: T;
      };
  advantages?:
    | T
    | {
        icon?: T;
        title?: T;
        description?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeatureGalleryBlock_select".
 */
export interface FeatureGalleryBlockSelect<T extends boolean = true> {
  theme?: T;
  title?:
    | T
    | {
        variant?: T;
        alignment?: T;
        subtitle?: T;
        title?: T;
        description?: T;
      };
  sbg?:
    | T
    | {
        variant?: T;
        gradientType?: T;
        img?: T;
      };
  features?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
        icon?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  stats?:
    | T
    | {
        number?: T;
        label?: T;
        description?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TestimonialBlock_select".
 */
export interface TestimonialBlockSelect<T extends boolean = true> {
  theme?: T;
  sbg?:
    | T
    | {
        variant?: T;
        gradientType?: T;
        img?: T;
      };
  title?:
    | T
    | {
        variant?: T;
        alignment?: T;
        subtitle?: T;
        title?: T;
        description?: T;
      };
  testimonials?:
    | T
    | {
        name?: T;
        role?: T;
        rating?: T;
        image?: T;
        avatar?: T;
        content?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FAQBlock_select".
 */
export interface FAQBlockSelect<T extends boolean = true> {
  theme?: T;
  sbg?:
    | T
    | {
        variant?: T;
        gradientType?: T;
        img?: T;
      };
  title?:
    | T
    | {
        variant?: T;
        alignment?: T;
        subtitle?: T;
        title?: T;
        description?: T;
      };
  image?: T;
  statistics?:
    | T
    | {
        title?: T;
        value?: T;
        id?: T;
      };
  additionalInfoTitle?: T;
  additionalInfo?: T;
  faqs?:
    | T
    | {
        question?: T;
        answer?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContactUsBlock_select".
 */
export interface ContactUsBlockSelect<T extends boolean = true> {
  theme?: T;
  sbg?:
    | T
    | {
        variant?: T;
        gradientType?: T;
        img?: T;
      };
  title?:
    | T
    | {
        variant?: T;
        alignment?: T;
        subtitle?: T;
        title?: T;
        description?: T;
      };
  blocks?:
    | T
    | {
        formBlock?: T | FormBlockSelect<T>;
      };
  contactDisplay?:
    | T
    | {
        showPhones?: T;
        showEmails?: T;
        showAddresses?: T;
        showWorkingHours?: T;
        showMap?: T;
      };
  corporate?:
    | T
    | {
        title?: T;
        description?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  slugLock?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  title?: T;
  shortDescription?: T;
  itemCode?: T;
  price?: T;
  availability?: T;
  isRatingEnabled?: T;
  rating?: T;
  reviewsCount?: T;
  features?:
    | T
    | {
        feature?: T;
        id?: T;
      };
  images?:
    | T
    | {
        image?: T;
        id?: T;
      };
  benefits?:
    | T
    | {
        icon?: T;
        title?: T;
        description?: T;
        id?: T;
      };
  content?: T;
  fullDescription?: T;
  specifications?:
    | T
    | {
        name?: T;
        value?: T;
        id?: T;
      };
  additionalSpecifications?:
    | T
    | {
        icon?: T;
        name?: T;
        description?: T;
        id?: T;
      };
  documents?:
    | T
    | {
        name?: T;
        file?: T;
        id?: T;
      };
  relatedProducts?: T;
  categories?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  excerpt?: T;
  heroImage?: T;
  gallery?:
    | T
    | {
        image?: T;
        caption?: T;
        id?: T;
      };
  content?: T;
  categories?: T;
  relatedPosts?: T;
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  readTime?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
        role?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  cloudinary?:
    | T
    | {
        assetId?: T;
        publicId?: T;
        version?: T;
        signature?: T;
        width?: T;
        height?: T;
        format?: T;
        resourceType?: T;
        createdAt?: T;
        bytes?: T;
        type?: T;
        url?: T;
        secureUrl?: T;
        folder?: T;
        displayName?: T;
        duration?: T;
        eager?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders_select".
 */
export interface OrdersSelect<T extends boolean = true> {
  productTitle?: T;
  itemCode?: T;
  productId?: T;
  submittedAt?: T;
  status?: T;
  notes?: T;
  name?: T;
  phone?: T;
  email?: T;
  message?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "subscribers_select".
 */
export interface SubscribersSelect<T extends boolean = true> {
  email?: T;
  status?: T;
  subscribedAt?: T;
  source?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              placeholder?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              placeholder?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              placeholder?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              placeholder?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  categories?:
    | T
    | {
        relationTo?: T;
        id?: T;
        title?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contactInfo".
 */
export interface ContactInfo {
  id: number;
  phones?: {
    /**
     * Used as a heading for the phone numbers section
     */
    title?: string | null;
    /**
     * A short description or subtitle for the phone numbers section
     */
    description?: string | null;
    items?:
      | {
          number: string;
          isPrimary?: boolean | null;
          id?: string | null;
        }[]
      | null;
  };
  emails?: {
    /**
     * Used as a heading for the email addresses section
     */
    title?: string | null;
    /**
     * A short description or subtitle for the email addresses section
     */
    description?: string | null;
    items?:
      | {
          email: string;
          isPrimary?: boolean | null;
          id?: string | null;
        }[]
      | null;
  };
  addresses?: {
    /**
     * Used as a heading for the addresses section
     */
    title?: string | null;
    /**
     * A short description or subtitle for the addresses section
     */
    description?: string | null;
    items?:
      | {
          street: string;
          city: string;
          region?: string | null;
          postalCode?: string | null;
          country?: string | null;
          isPrimary?: boolean | null;
          id?: string | null;
        }[]
      | null;
    /**
     * You can paste either a direct URL or full iframe embed code from Google Maps. The system will automatically extract the URL from iframe code.
     */
    mapSrc?: string | null;
  };
  workingHours?: {
    /**
     * Used as a heading for the working hours section
     */
    title?: string | null;
    /**
     * A short description or subtitle for the working hours section
     */
    description?: string | null;
    weekdays?: string | null;
    weekends?: string | null;
    holidays?: string | null;
  };
  socialMedia?: {
    items?:
      | {
          icon?: string | null;
          name: string;
          url: string;
          id?: string | null;
        }[]
      | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "productPageSettings".
 */
export interface ProductPageSetting {
  id: number;
  /**
   * Enable or disable product ratings site-wide.
   */
  isRatingEnabled?: boolean | null;
  /**
   * Extendes Additional Information in the "Specifications" tab on all product pages.
   */
  globalAdditionalInfo?:
    | {
        icon?: string | null;
        name: string;
        description: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Extendes documents in the "Documents" tab on all product pages.
   */
  globalDocuments?:
    | {
        name: string;
        file: number | Media;
        type: 'PDF' | 'DOC' | 'XLS';
        /**
         * Faile size (e.g., "2.1 MB")
         */
        size?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Default benefits displayed on all product pages. Can be overridden in individual products.
   */
  defaultBenefits?:
    | {
        icon?: string | null;
        title: string;
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Global content displayed after product-specific content section
   */
  globalContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "postPageSettings".
 */
export interface PostPageSetting {
  id: number;
  /**
   * Select the hero layout for post pages
   */
  heroLayout: 'simple' | 'full';
  /**
   * Title for the related posts section
   */
  relatedPostsTitle: string;
  /**
   * Description for the related posts section
   */
  relatedPostsDescription: string;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  logo?: {
    /**
     * Header logo (leave empty to use default)
     */
    light?: (number | null) | Media;
    /**
     * Header logo (leave empty to use default)
     */
    dark?: (number | null) | Media;
  };
  navItems?:
    | {
        icon?: string | null;
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null)
            | ({
                relationTo: 'products';
                value: number | Product;
              } | null);
          url?: string | null;
          label: string;
        };
        submenu?:
          | {
              icon?: string | null;
              description?: string | null;
              link: {
                type?: ('reference' | 'custom') | null;
                newTab?: boolean | null;
                reference?:
                  | ({
                      relationTo: 'pages';
                      value: number | Page;
                    } | null)
                  | ({
                      relationTo: 'posts';
                      value: number | Post;
                    } | null)
                  | ({
                      relationTo: 'products';
                      value: number | Product;
                    } | null);
                url?: string | null;
                label: string;
              };
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  /**
   * Choose the footer layout style
   */
  layout: 'v1' | 'v2';
  theme?: ('light' | 'dark') | null;
  sbg?: {
    variant?: ('none' | 'gradient' | 'image' | 'gradient and image') | null;
    gradientType?: ('top' | 'bottom' | 'top and bottom') | null;
    img?: (number | null) | Media;
  };
  logo?: {
    /**
     * Footer logo (leave empty to use default)
     */
    light?: (number | null) | Media;
    /**
     * Footer logo (leave empty to use default)
     */
    dark?: (number | null) | Media;
  };
  /**
   * Company description text
   */
  description?: string | null;
  /**
   * In V2 layout showing all items with the title of first group
   */
  navGroups?:
    | {
        title: string;
        navItems?:
          | {
              link: {
                type?: ('reference' | 'custom') | null;
                newTab?: boolean | null;
                reference?:
                  | ({
                      relationTo: 'pages';
                      value: number | Page;
                    } | null)
                  | ({
                      relationTo: 'posts';
                      value: number | Post;
                    } | null)
                  | ({
                      relationTo: 'products';
                      value: number | Product;
                    } | null);
                url?: string | null;
                label: string;
              };
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  newsletter?: {
    enabled?: boolean | null;
    title?: string | null;
    description?: string | null;
    buttonText?: string | null;
  };
  /**
   * Copyright text (Copyright © and year will be added automatically)
   */
  copyright?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contactInfo_select".
 */
export interface ContactInfoSelect<T extends boolean = true> {
  phones?:
    | T
    | {
        title?: T;
        description?: T;
        items?:
          | T
          | {
              number?: T;
              isPrimary?: T;
              id?: T;
            };
      };
  emails?:
    | T
    | {
        title?: T;
        description?: T;
        items?:
          | T
          | {
              email?: T;
              isPrimary?: T;
              id?: T;
            };
      };
  addresses?:
    | T
    | {
        title?: T;
        description?: T;
        items?:
          | T
          | {
              street?: T;
              city?: T;
              region?: T;
              postalCode?: T;
              country?: T;
              isPrimary?: T;
              id?: T;
            };
        mapSrc?: T;
      };
  workingHours?:
    | T
    | {
        title?: T;
        description?: T;
        weekdays?: T;
        weekends?: T;
        holidays?: T;
      };
  socialMedia?:
    | T
    | {
        items?:
          | T
          | {
              icon?: T;
              name?: T;
              url?: T;
              id?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "productPageSettings_select".
 */
export interface ProductPageSettingsSelect<T extends boolean = true> {
  isRatingEnabled?: T;
  globalAdditionalInfo?:
    | T
    | {
        icon?: T;
        name?: T;
        description?: T;
        id?: T;
      };
  globalDocuments?:
    | T
    | {
        name?: T;
        file?: T;
        type?: T;
        size?: T;
        id?: T;
      };
  defaultBenefits?:
    | T
    | {
        icon?: T;
        title?: T;
        description?: T;
        id?: T;
      };
  globalContent?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "postPageSettings_select".
 */
export interface PostPageSettingsSelect<T extends boolean = true> {
  heroLayout?: T;
  relatedPostsTitle?: T;
  relatedPostsDescription?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  logo?:
    | T
    | {
        light?: T;
        dark?: T;
      };
  navItems?:
    | T
    | {
        icon?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        submenu?:
          | T
          | {
              icon?: T;
              description?: T;
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                  };
              id?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  layout?: T;
  theme?: T;
  sbg?:
    | T
    | {
        variant?: T;
        gradientType?: T;
        img?: T;
      };
  logo?:
    | T
    | {
        light?: T;
        dark?: T;
      };
  description?: T;
  navGroups?:
    | T
    | {
        title?: T;
        navItems?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                  };
              id?: T;
            };
        id?: T;
      };
  newsletter?:
    | T
    | {
        enabled?: T;
        title?: T;
        description?: T;
        buttonText?: T;
      };
  copyright?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'products';
          value: number | Product;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null);
    global?: string | null;
    user?: (number | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  style: 'info' | 'warning' | 'error' | 'success';
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}